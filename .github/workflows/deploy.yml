name: Deploy Backend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Docker credentials
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nitinchowdarynannapaneni/geomart-backend:latest

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_HOST << 'ENDSSH'
            set -e

            # Clean up old Docker resources
            docker system prune -af || true

            # Create app directory
            mkdir -p /home/ubuntu/GeoMart-Backend

            # Create .env file
            cat > /home/ubuntu/GeoMart-Backend/.env << 'ENDENV'
          AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_SSLMODE=${{ secrets.DB_SSLMODE }}
          DB_TIMEZONE=${{ secrets.DB_TIMEZONE }}
          AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}
          ENDENV
          
          # Secure the .env file
          chmod 600 /home/ubuntu/GeoMart-Backend/.env
          
          # Docker operations
          docker pull nitinchowdarynannapaneni/geomart-backend:latest
          docker stop geomart-backend || true
          docker rm geomart-backend || true
          
          # Run with environment file and working directory set
          if ! docker run -d \
          --name geomart-backend \
          -p 8080:8080 \
          --restart unless-stopped \
          --workdir /app \
          --env-file /home/ubuntu/GeoMart-Backend/.env \
          nitinchowdarynannapaneni/geomart-backend:latest; then
          echo "Failed to start container"
          exit 1
          fi
          
          # Wait for container to initialize
          sleep 10
          
          # Check container status and logs
          if ! docker ps | grep -q "geomart-backend"; then
          echo "Container failed to start. Checking logs..."
          docker logs geomart-backend
          exit 1
          fi
          
          # Show recent logs for verification
          echo "Container started. Recent logs:"
          docker logs geomart-backend --tail 20
          ENDSSH
          rm -f private_key.pem