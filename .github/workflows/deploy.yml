name: Deploy to EC2

on:
  push:
    branches:
      - main  # Runs when you push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t nitinchowdarynannapaneni/geomart-frontend:latest .
          docker push nitinchowdarynannapaneni/geomart-frontend:latest

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            docker login -u "nitinchowdarynannapaneni" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"

            echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" > /home/ubuntu/GeoMart-Frontend/.env
            echo "AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}" >> /home/ubuntu/GeoMart-Frontend/.env
            echo "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}" >> /home/ubuntu/GeoMart-Frontend/.env
            echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> /home/ubuntu/GeoMart-Frontend/.env
            echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> /home/ubuntu/GeoMart-Frontend/.env
            echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> /home/ubuntu/GeoMart-Frontend/.env
            echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> /home/ubuntu/GeoMart-Frontend/.env

            # Deploy frontend container with .env
            docker pull nitinchowdarynannapaneni/geomart-frontend:latest
            docker stop geomart-frontend || true
            docker rm geomart-frontend || true
            docker run --env-file /home/ubuntu/GeoMart-Frontend/.env -d -p 80:3000 --name geomart-frontend nitinchowdarynannapaneni/geomart-frontend:latest
          EOF
          rm -f private_key.pem
